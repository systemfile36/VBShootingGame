전체 흐름

시작 화면과 각종 메뉴들은 생략

Form_Load 에서 배경과 각종 설정등을 셋팅한다. 이 시점에서 MainLoop(work Thread)와 MainTimer(UI Thread)가 실행된다.

MainLoop   :   	player.Move()로 player의 좌표를 갱신하고 RefreshOtherObjects()를 호출한다.

		그리고 두개의 배경의 좌표를 변경하여 움직이는 배경을 구현한다.
		
		마지막으로 Invalidate()를 호출하여 변경된 내용을 적용한다.

RefreshObjects()    :	먼저 GameManager객체의 메소드를 통해 적 생성 주기를 체크해 True라면
			
			적 객체에 게임시간과 랜덤 숫자, 난이도를 넘겨서 생성한다.(각각 ID와 초기 위치, 발사 간격에 관여)

			그리고 Player객체의 메소드를 통해 총탄 생성 여부를 판단해 총탄을 생성하고 소리를 재생한다.

			그 뒤 OtherObjects로 For Each를 돌린다. 다음은 루프 내의 내용이다.

				먼저 파괴되지 않은 객체들의 좌표를 갱신한다.
				
				그리고 오브젝트의 타입을 참고해서 적 타입이라면 적의 발사 여부 함수를 호출하고

				True라면 addObj에 임시로 Bullet 객체를 추가하고 IsFire 플래그를 False로 바꾼다.

				만약 오브젝트가 파괴 되지 않았다면 한번 더 루프를 돌면서 충돌 판정을 행한다.
				
				각 객체의 충돌판정 함수를 실행한다. 만약 충돌되었다면 객체 내에서 파괴 등의 행위가 일어난다.

				충돌 판정 루프를 끝내고 파괴 여부를 확인한다. 파괴되었다면 removeObj에 임시로 추가한다.

				플레이어의 파괴 여부를 판단하고 True라면 게임을 종료한다.

			removeObj로 루프를 돌면서 삭제를 반영한다. 

			이때 파괴에 딜레이를 주기 위해 객체 내부에 카운터가 있다. (Destroy가 호출될때마다 증가)

			이 카운터가 일정 딜레이에 도달했는지를 판단하고 도달했다면 삭제한다.(Remove를 사용, ID를 체크해서 같다면 삭제됨(Equals 오버로딩))

			추가된 객체도 반영한다.

			그리고 addObj와 removeObj를 비우고 GameManager의 난이도 체크 함수를 호출한다.

MainTimer   :	work Thread에서 동작하는 MainLoop를 대신한다. Player 이동을 위한 currentKey의 크로스 스레드의 방지를 위해
		
		SetControl()에 currentKey를 반복하며 넣어주는 역할을 한다.	



Player 객체 이동 구현

사용자가 키를 누르면 KeyDown이벤트가 발생한다. 

이 이벤트 내에서 누른 키가 WASD(이동 키)중 하나이면 Form1의 currentKey List(Of Keys)를 참조하여

누른 키가 이미 존재하는 지 확인하고 존재하지 않으면 누른 키를 추가한다.

MainTimer가 계속 돌면서 player의 SetControl(List(Of Keys))에 currentKey 리스트를 넘긴다.
(MainLoop는 다른 스레드에 있어서 크로스 쓰레드가 발생할 수 있기에)

SetControl(List(Of Keys))에서 넘겨받은 리스트의 Item 개수를 확인해서 개수에 맞는 오버로딩된

다른 SetControl을 부른다. 개수가 하나라면 단순히 그 키에 맞게 방향을 p_control에 설정한다.

개수가 두개라면 두개의 키 조합을 체크해서 그에 맞게 대각선 방향으로 설정한다. 세 개 이상이라면 무시한다.

키에서 손을 떼면 KeyUp이벤트가 발생한다.

이 이벤트 내에서 KeyUp된 키가 스페이스라면 바로 IsInputFire 플래그를 설정하기 위해 매개변수 하나인 ReleaseControl()을 호출한다.

그 외라면 KeyUp을 발생시킨 키를 currentKey에서 삭제하고 리스트를 매개변수로 받는 ReleaseControl()을 호출한다.

이 ReleaseControl()에서 리스트의 개수를 체크해서 0개라면 p_control을 None으로, 1개 이상이라면 그에 맞는 SetControl()을 부르고

3개 이상은 무시한다.

설정된 플래그는 MainLoop에서 player의 Move() 메소드를 호출하여 그 메소드에서 참조한 뒤 좌표를 변경한다.

변경된 좌표는 MainLoop가 한번 호출 될때마다 Invalidate()를 호출하여 호출되는 paint함수에서 그려진다.







